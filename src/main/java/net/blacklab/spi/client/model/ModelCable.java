// Date: 2015/10/05 9:34:10
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package net.blacklab.spi.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelCable extends ModelBase
{
  //fields
    public ModelRenderer centerCube;
    public ModelRenderer southCable;
    public ModelRenderer eastCable;
    public ModelRenderer northCable;
    public ModelRenderer westCable;
    public ModelRenderer upCable;
    public ModelRenderer downCable;
  
  public ModelCable(){
    textureWidth = 64;
    textureHeight = 32;
    
      centerCube = new ModelRenderer(this, 0, 0);
      centerCube.addBox(0F, 0F, 0F, 2, 2, 2);
      centerCube.setRotationPoint(-1F, 15F, -1F);
      centerCube.setTextureSize(64, 32);
      centerCube.mirror = true;
      setRotation(centerCube, 0F, 0F, 0F);
      southCable = new ModelRenderer(this, 8, 0);
      southCable.addBox(0F, 0F, 0F, 2, 2, 7);
      southCable.setRotationPoint(-1F, 15F, -8F);
      southCable.setTextureSize(64, 32);
      southCable.mirror = true;
      setRotation(southCable, 0F, 0F, 0F);
      eastCable = new ModelRenderer(this, 0, 9);
      eastCable.addBox(0F, 0F, 0F, 7, 2, 2);
      eastCable.setRotationPoint(1F, 15F, -1F);
      eastCable.setTextureSize(64, 32);
      eastCable.mirror = true;
      setRotation(eastCable, 0F, 0F, 0F);
      northCable = new ModelRenderer(this, 8, 0);
      northCable.addBox(0F, 0F, 0F, 2, 2, 7);
      northCable.setRotationPoint(-1F, 15F, 1F);
      northCable.setTextureSize(64, 32);
      northCable.mirror = true;
      setRotation(northCable, 0F, 0F, 0F);
      westCable = new ModelRenderer(this, 0, 9);
      westCable.addBox(0F, 0F, 0F, 7, 2, 2);
      westCable.setRotationPoint(-8F, 15F, -1F);
      westCable.setTextureSize(64, 32);
      westCable.mirror = true;
      setRotation(westCable, 0F, 0F, 0F);
      upCable = new ModelRenderer(this, 26, 0);
      upCable.addBox(0F, 0F, 0F, 2, 7, 2);
      upCable.setRotationPoint(-1F, 8F, -1F);
      upCable.setTextureSize(64, 32);
      upCable.mirror = true;
      setRotation(upCable, 0F, 0F, 0F);
      downCable = new ModelRenderer(this, 26, 0);
      downCable.addBox(0F, 0F, 0F, 2, 7, 2);
      downCable.setRotationPoint(-1F, 17F, -1F);
      downCable.setTextureSize(64, 32);
      downCable.mirror = true;
      setRotation(downCable, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    centerCube.render(f5);
    southCable.render(f5);
    eastCable.render(f5);
    northCable.render(f5);
    westCable.render(f5);
    upCable.render(f5);
    downCable.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e6)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, e6);
  }

}
